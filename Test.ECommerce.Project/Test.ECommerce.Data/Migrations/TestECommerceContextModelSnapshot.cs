// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test.ECommerce.Data;

namespace Test.ECommerce.Data.Migrations
{
    [DbContext(typeof(TestECommerceContext))]
    partial class TestECommerceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Test.ECommerce.Data.Models.Basket", b =>
                {
                    b.Property<int>("BasketId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BasketKey");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("CustomerId");

                    b.Property<bool>("IsActive");

                    b.Property<string>("ProductCode");

                    b.Property<double>("ProductPrice");

                    b.Property<int>("Quantity");

                    b.HasKey("BasketId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("Test.ECommerce.Data.Models.Category", b =>
                {
                    b.Property<string>("CategoryCode")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryName");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.HasKey("CategoryCode");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Test.ECommerce.Data.Models.Product", b =>
                {
                    b.Property<string>("ProductCode")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryCode");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ProductName");

                    b.Property<double>("ProductPrice");

                    b.Property<long?>("StockCount");

                    b.HasKey("ProductCode");

                    b.HasIndex("CategoryCode");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Test.ECommerce.Data.Models.Product", b =>
                {
                    b.HasOne("Test.ECommerce.Data.Models.Category", "Category")
                        .WithMany("Product")
                        .HasForeignKey("CategoryCode");
                });
#pragma warning restore 612, 618
        }
    }
}
